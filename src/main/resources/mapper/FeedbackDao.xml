<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.emsmybatisliquibase.dao.FeedbackDao">
    <resultMap id="feedbackResult" type="com.learning.emsmybatisliquibase.entity.Feedback">
        <id property="uuid" column="uuid" javaType="java.util.UUID" jdbcType="VARCHAR"
            typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="employeeUuid" column="employee_uuid" javaType="java.util.UUID" jdbcType="VARCHAR"
                typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="targetEmployeeUuid" column="target_employee_uuid" javaType="java.util.UUID" jdbcType="VARCHAR"
                typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="type" column="type"/>
        <result property="lookBack" column="look_back"/>
        <result property="lookForward" column="look_forward"/>
        <result property="otherComments" column="other_comments"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>
    </resultMap>

    <insert id="insert" flushCache="true">
        INSERT INTO feedback(uuid, employee_uuid, target_employee_uuid, type, look_back, look_forward, other_comments,
                             created_time, updated_time)
        VALUES (#{feedback.uuid}, #{feedback.employeeUuid}, #{feedback.targetEmployeeUuid}, #{feedback.type},
                #{feedback.lookBack}, #{feedback.lookForward}, #{feedback.otherComments}, CURRENT_TIMESTAMP,
                CURRENT_TIMESTAMP)
    </insert>

    <update id="update" flushCache="true">
        UPDATE feedback
        SET employee_uuid        = #{feedback.employeeUuid},
            target_employee_uuid = #{feedback.targetEmployeeUuid},
            type                 = #{feedback.type},
            look_back            = #{feedback.lookBack},
            look_forward         = #{feedback.lookForward},
            other_comments       = #{feedback.otherComments},
            updated_time         = CURRENT_TIMESTAMP
        WHERE uuid = #{feedback.uuid}
    </update>

    <select id="findSendFeedback" resultMap="feedbackResult">
        SELECT *
        FROM feedback
        WHERE employee_uuid = #{employeeUuid}
          AND type = #{type}
    </select>

    <select id="findReceivedFeedback" resultMap="feedbackResult">
        SELECT *
        FROM feedback
        WHERE target_employee_uuid = #{targetEmployeeUuid}
          AND type = #{type}
    </select>

    <select id="getById" resultMap="feedbackResult">
        SELECT *
        FROM feedback
        WHERE uuid = #{uuid}
    </select>

    <delete id="delete" flushCache="true">
        DELETE
        from feedback
        where uuid = #{uuid}
    </delete>
</mapper>