<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.emsmybatisliquibase.dao.EmployeeDao">
    <resultMap id="employeeResult" type="com.learning.emsmybatisliquibase.entity.Employee">
        <id property="uuid" column="uuid" jdbcType="VARCHAR" javaType="java.util.UUID"
            typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="gender" column="gender"/>
        <result property="dateOfBirth" column="date_of_birth"/>
        <result property="phoneNumber" column="phone_number"/>
        <result property="email" column="email"/>
        <result property="managerUuid" column="manager_uuid" jdbcType="VARCHAR" javaType="java.util.UUID"
                typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="isManager" column="is_manager"/>
        <result property="password" column="password"/>
        <result property="joiningDate" column="joining_date"/>
        <result property="leavingDate" column="leaving_date"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>
    </resultMap>

    <select id="get" resultMap="employeeResult">
        select *
        from employee
        where uuid = #{uuid}
    </select>

    <select id="getByEmail" resultMap="employeeResult">
        select *
        from employee
        where email = #{email}
    </select>
    <insert id="insert" flushCache="true">
        insert into employee (uuid, first_name, last_name, gender, date_of_birth, phone_number, email, manager_uuid,
                              is_manager, password, joining_date, leaving_date, created_time, updated_time)
        values (#{employee.uuid}, #{employee.firstName}, #{employee.lastName}, #{employee.gender},
                #{employee.dateOfBirth}, #{employee.phoneNumber},
                #{employee.email}, #{employee.managerUuid}, #{employee.isManager}, #{employee.password},
                #{employee.joiningDate}, #{employee.leavingDate}, current_timestamp, current_timestamp)
    </insert>

    <update id="updateLeavingDate" flushCache="true">
        update employee
        set leaving_date = #{leavingDate}
        where uuid = #{employeeUuid}
    </update>
    <select id="getAll" resultMap="employeeResult">
        select *
        from employee
    </select>

    <select id="count">
        select count(*)
        from employee
    </select>

    <select id="getAllByManagerUuid" resultMap="employeeResult">
        select *
        from employee
        where manager_uuid = #{managerUuid}
    </select>

    <update id="update" flushCache="true">
        update employee
        set first_name   = #{employee.firstName},
            last_name= #{employee.lastName},
            gender= #{employee.gender},
            date_of_birth= #{employee.dateOfBirth},
            phone_number= #{employee.phoneNumber},
            email= #{employee.email},
            manager_uuid= #{employee.managerUuid},
            is_manager= #{employee.isManager},
            password= #{employee.password},
            joining_date= #{employee.joiningDate},
            leaving_date= #{employee.leavingDate},
            updated_time= current_timestamp
        where uuid = #{employee.uuid}
    </update>

    <select id="getActiveEmployeesWithPastLeavingDate" resultMap="employeeResult">
        select *
        from employee e
        left join profile p on e.uuid = p.employee_uuid
        where e.leaving_date &lt; current_date and p.profile_status != 'INACTIVE'
    </select>

    <select id="getAllActiveEmployeeIds" resultMap="java.util.UUID">
        select e.uuid
        from employee e
                 left join profile p on e.uuid = p.employee_uuid
        where p.profile_status in ('ACTIVE', 'PENDING')
          and (e.leaving_date is null or e.leaving_date > current_date)
    </select>

</mapper>