<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.emsmybatisliquibase.dao.LeaveDao">
    <resultMap id="leaveStructure" type="com.learning.emsmybatisliquibase.entity.Leave">
        <id property="uuid" column="uuid" jdbcType="VARCHAR" javaType="java.util.UUID"
            typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="employeeUuid" column="colleague_uuid" jdbcType="VARCHAR" javaType="java.util.UUID"
                typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="date" column="date"/>
        <result property="type" column="type"/>
        <result property="status" column="status"/>
        <result property="reason" column="reason"/>
        <result property="comments" column="comments"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>
    </resultMap>

    <select id="getLeavesByEmployee" resultMap="leaveStructure">
        select *
        from leave
        where employee_uuid = #{employeeUuid}
    </select>

    <insert id="insert" flushCache="true">
        insert into leave (uuid, employee_uuid, date, type, status, reason, comments, created_time, updated_time)
        VALUES (#{leave.uuid}, #{leave.employeeUuid}, #{leave.date}, #{leave.type}, #{leave.status}, #{leave.reason},
                #{leave.comments}, current_timestamp, current_timestamp);
    </insert>

    <update id="update" flushCache="true">
        update leave
        set employee_uuid = #{leave.employeeUuid},
            date          = #{leave.date},
            type          = #{leave.type},
            status        = #{leave.status},
            reason        = #{leave.reason},
            comments      = #{leave.comments},
            updated_time  = current_timestamp
        where uuid = #{leave.uuid}
    </update>

    <delete id="delete" flushCache="true">
        delete
        from leave
        where uuid = #{uuid}
    </delete>

    <select id="getById" resultMap="leaveStructure">
        select *
        from leave
        where uuid = #{uuid}
    </select>
</mapper>