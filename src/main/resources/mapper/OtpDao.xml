<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.emsmybatisliquibase.dao.OtpDao">
    <resultMap id="otpAuthMap" type="com.learning.emsmybatisliquibase.entity.OtpAuth">
        <id property="uuid" column="uuid" jdbcType="VARCHAR" javaType="java.util.UUID"
            typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="employeeUuid" column="employee_uuid" jdbcType="VARCHAR" javaType="java.util.UUID"
                typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="otp" column="otp"/>
        <result property="status" column="status"/>
        <result property="type" column="type"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>
    </resultMap>

    <select id="get" resultMap="otpAuthMap">
        SELECT *
        FROM otp
        <trim prefix="WHERE" prefixOverrides="AND|OR" suffixOverrides="AND|OR">
            <include refid="applyFilters"/>
        </trim>
    </select>

    <sql id="applyFilters">
        <if test="requestQuery.properties.uuid != null">
            AND uuid = #{requestQuery.properties.uuid}
        </if>
        <if test="requestQuery.properties.employeeUuid != null">
            AND employee_uuid = #{requestQuery.properties.employeeUuid}
        </if>
        <if test="requestQuery.properties.types != null and requestQuery.properties.types.size() > 0">
            <include refid="otpTypeFilter"/>
        </if>
        <if test="requestQuery.properties.statuses != null and requestQuery.properties.statuses.size() > 0">
            <include refid="otpStatusFilter"/>
        </if>
    </sql>

    <sql id="otpStatusFilter">
        <foreach collection="requestQuery.properties.statuses" item="status" open="AND status IN (" separator=","
                 close=")">
            #{status}
        </foreach>
    </sql>

    <sql id="otpTypeFilter">
        <foreach collection="requestQuery.properties.types" item="type" open="AND type IN (" separator="," close=")">
            #{type}
        </foreach>
    </sql>

    <insert id="insert" flushCache="true">
        INSERT INTO otp (uuid, employee_uuid, otp, status, type, created_time, updated_time)
        VALUES (#{otp.uuid}, #{otp.employeeUuid}, #{otp.otp}, #{otp.status},
        #{otp.type}, CURRENT_TIMESTAMP, CURRENT_TIMESTAMP);
    </insert>

    <update id="update" flushCache="true">
        UPDATE otp
        SET employee_uuid = #{otp.employeeUuid},
        otp = #{otp.otp},
        status = #{otp.status},
        type = #{otp.type},
        updated_time = CURRENT_TIMESTAMP
        WHERE uuid = #{otp.uuid}
    </update>

    <delete id="delete" flushCache="true">
        DELETE
        FROM otp
        WHERE uuid = #{uuid}
    </delete>
</mapper>