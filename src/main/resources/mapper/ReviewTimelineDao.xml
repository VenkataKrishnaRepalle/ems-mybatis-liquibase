<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.learning.emsmybatisliquibase.dao.ReviewTimelineDao">
    <resultMap id="reviewTimelineStructure" type="com.learning.emsmybatisliquibase.entity.ReviewTimeline">
        <id property="uuid" column="uuid" jdbcType="VARCHAR" javaType="java.util.UUID"
            typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="employeePeriodUuid" column="employee_cycle_uuid" jdbcType="VARCHAR" javaType="java.util.UUID"
                typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="type" column="type"/>
        <result property="startTime" column="start_time"/>
        <result property="overdueTime" column="overdue_time"/>
        <result property="lockTime" column="lock_time"/>
        <result property="endTime" column="end_time"/>
        <result property="status" column="status"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>
    </resultMap>

    <select id="getByEmployeePeriodId" resultMap="reviewTimelineStructure">
        select *
        from review_timeline
        where employee_period_uuid = #{employeePeriodUuid}
    </select>

    <insert id="insert" flushCache="true">
        INSERT INTO review_timeline (uuid, employee_period_uuid, type, start_time, overdue_time, lock_time, end_time, status,
                              created_time, updated_time)
        VALUES (#{reviewTimeline.uuid}, #{reviewTimeline.employeePeriodUuid}, #{reviewTimeline.type}, #{reviewTimeline.startTime},
                #{reviewTimeline.overdueTime}, #{reviewTimeline.lockTime}, #{reviewTimeline.endTime}, #{reviewTimeline.status},
                current_timestamp, current_timestamp)
    </insert>

    <update id="update" flushCache="true">
        UPDATE review_timeline
        SET employee_period_uuid = #{reviewTimeline.employeePeriodUuid},
            type                = #{reviewTimeline.type},
            start_time          = #{reviewTimeline.startTime},
            overdue_time        = #{reviewTimeline.overdueTime},
            lock_time           = #{reviewTimeline.lockTime},
            end_time            = #{reviewTimeline.endTime},
            status              = #{reviewTimeline.status},
            updated_time        = current_timestamp
        where uuid = #{reviewTimeline.uuid}
    </update>

    <select id="findByStatusAndReviewType" resultMap="reviewTimelineStructure">
        SELECT t.*
        from employee_period ec
                 left join period c on c.uuid = ec.period_uuid
                 left join review_timeline t on ec.uuid = t.employee_period_uuid
        where ec.status = #{status}
          and t.type = #{reviewType}
          and c.status = 'STARTED'
          and t.status != 'LOCKED'
    </select>

    <select id="getById" resultMap="reviewTimelineStructure">
        select *
        from review_timeline
        where uuid = #{uuid}
    </select>

    <select id="getByEmployeeUuidsAndReviewType" resultMap="reviewTimelineStructure">
        select t.*
        from employee e
        join profile p on e.uuid = p.employee_uuid and profile_status = 'ACTIVE'
        join employee_cycle ec on e.uuid = ec.employee_uuid and ec.status = 'STARTED'
        join reviewTimeline t on ec.uuid = t.employee_cycle_uuid and t.type = #{reviewType}
        where e.uuid in
        <foreach item="employeeUuid" collection="employeeUuids" open="(" separator="," close=")">
            #{employeeUuid, jdbcType=VARCHAR, typeHandler=com.learning.emsmybatisliquibase.handler.UuidTypeHandler}
        </foreach>
    </select>

    <resultMap id="notificationInfo" type="com.learning.emsmybatisliquibase.dto.NotificationDto">
        <id property="uuid" column="uuid" jdbcType="VARCHAR" javaType="java.util.UUID"
            typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="email" column="email"/>
        <result property="timelineUuid" column="timelineUuid" jdbcType="VARCHAR" javaType="java.util.UUID"
                typeHandler="com.learning.emsmybatisliquibase.handler.UuidTypeHandler"/>
        <result property="startTime" column="start_time"/>
    </resultMap>

    <select id="getTimelineIdsByReviewType" resultMap="notificationInfo">
        select e.uuid       as "uuid",
               e.first_name as "first_name",
               e.last_name  as "last_name",
               e.email      as "email",
               t.uuid       as "timelineUuid",
               t.start_time as "start_time"
        from employee e
                 join profile p on e.uuid = p.employee_uuid and p.profile_status = 'ACTIVE'
                 join employee_period ec on e.uuid = ec.employee_uuid and ec.status = 'STARTED'
                 join review_timeline t on ec.uuid = t.employee_period_uuid and t.type = #{reviewType};
    </select>
</mapper>